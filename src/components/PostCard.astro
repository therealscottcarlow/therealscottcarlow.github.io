---
import type { CollectionEntry } from 'astro:content';
import FormattedDate from './FormattedDate.astro';

export interface Props {
  post: CollectionEntry<'blog'>;
  highlight?: string;
}

const { post, highlight } = Astro.props;

// Create excerpt from description, highlighting search term if present
function getHighlightedDescription(text: string, term?: string): string {
  if (!term) return text;
  
  const regex = new RegExp(`(${term})`, 'gi');
  return text.replace(regex, '<mark>$1</mark>');
}

const description = highlight 
  ? getHighlightedDescription(post.data.description, highlight)
  : post.data.description;
---

<article class="post-card">
  <a href={`/blog/${post.id}/`}>
    <div class="post-image">
      {post.data.heroImage && <img width={720} height={360} src={post.data.heroImage} alt="" />}
    </div>
    <div class="post-content">
      <h3 class="post-title" set:html={highlight ? getHighlightedDescription(post.data.title, highlight) : post.data.title} />
      <div class="post-meta">
        <FormattedDate date={post.data.pubDate} />
        {post.data.tags && post.data.tags.length > 0 && (
          <div class="post-tags">
            {post.data.tags.map((tag: string) => (
              <a href={`/blog/tag/${tag}`} class="post-tag">{tag}</a>
            ))}
          </div>
        )}
      </div>
      <p class="post-excerpt" set:html={description} />
    </div>
  </a>
</article>

<style>
  .post-card {
    margin-bottom: 2rem;
    border-radius: 8px;
    overflow: hidden;
    background-color: var(--card-bg);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }
  
  .post-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }
  
  .post-card a {
    display: block;
    text-decoration: none;
    color: inherit;
  }
  
  .post-image {
    overflow: hidden;
    position: relative;
    padding-top: 56.25%; /* 16:9 aspect ratio */
  }
  
  .post-image img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .post-card:hover .post-image img {
    transform: scale(1.05);
  }
  
  .post-content {
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    height: 280px; /* Fixed height for content section */
  }
  
  .post-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
    color: var(--heading-color);
    line-height: 1.3;
  }
  
  .post-meta {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
    font-size: 0.875rem;
    color: var(--text-color);
    opacity: 0.8;
  }
  
  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .post-tag {
    display: inline-block;
    padding: 0.2rem 0.5rem;
    border-radius: 3px;
    background-color: var(--accent-light);
    color: var(--text-color);
    font-size: 0.75rem;
    text-decoration: none;
    transition: background-color 0.2s ease, color 0.2s ease;
  }
  
  .post-tag:hover {
    background-color: var(--accent);
    color: white;
  }
  
  .post-excerpt {
    margin: 0;
    color: var(--text-color);
    font-size: 0.95rem;
    line-height: 1.6;
    flex-grow: 1;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
  }
  
  .post-excerpt mark {
    background-color: var(--accent-light);
    color: var(--text-color);
    padding: 0 0.2em;
    border-radius: 2px;
  }
</style>