---
---
<button id="theme-status" class="theme-status" aria-label="Toggle theme">
  <span class="dark-label">Dark Mode</span>
  <span class="light-label">Light Mode</span>
  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 20 20" fill="currentColor" class="sun-icon">
    <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 10a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 10a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd" />
  </svg>
  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 20 20" fill="currentColor" class="moon-icon">
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
  </svg>
</button>

<script>
  function updateStatus() {
    try {
      const currentTheme = document.documentElement.getAttribute('data-theme') || 'dark';
      const statusEl = document.getElementById('theme-status');
      
      if (statusEl) {
        statusEl.classList.remove('dark', 'light');
        statusEl.classList.add(currentTheme);
      }
    } catch (e) {
      console.error('Error updating theme status:', e);
    }
  }

  // Toggle between light and dark themes
  function toggleTheme() {
    try {
      const currentTheme = document.documentElement.getAttribute('data-theme') || 'dark';
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      
      document.documentElement.setAttribute('data-theme', newTheme);
      localStorage.setItem('theme', newTheme);
      updateStatus();
    } catch (e) {
      console.error('Error toggling theme:', e);
    }
  }

  // Update on page load
  document.addEventListener('DOMContentLoaded', updateStatus);
  
  // Update whenever the theme changes
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (
        mutation.type === 'attributes' &&
        mutation.attributeName === 'data-theme'
      ) {
        updateStatus();
      }
    });
  });

  if (document.documentElement) {
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ['data-theme']
    });
  }
  
  // Setup click event on the status button
  function setupClickHandler() {
    const statusEl = document.getElementById('theme-status');
    if (statusEl) {
      statusEl.addEventListener('click', toggleTheme);
    }
  }
  
  // Run once on page load
  window.addEventListener('load', () => {
    updateStatus();
    setupClickHandler();
  });
  
  // Also support Astro's view transitions
  document.addEventListener('astro:page-load', () => {
    setupClickHandler();
  });
</script>

<style>
  .theme-status {
    position: fixed;
    bottom: 20px;
    right: 20px;
    padding: 10px 16px;
    border-radius: 25px;
    font-size: 14px;
    font-weight: bold;
    background-color: var(--accent-light);
    color: var(--heading-color);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    z-index: 100;
    transition: all 0.3s ease;
    opacity: 0.8;
    border: none;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 8px;
  }
  
  .theme-status:hover {
    opacity: 1;
    transform: translateY(-3px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  }
  
  .theme-status:active {
    transform: translateY(-1px);
  }
  
  .theme-status:focus {
    outline: none;
    box-shadow: 0 0 0 3px var(--accent), 0 2px 8px rgba(0, 0, 0, 0.2);
  }
  
  .theme-status.dark .light-label,
  .theme-status.light .dark-label {
    display: none;
  }
  
  .theme-status.dark .sun-icon,
  .theme-status.light .moon-icon {
    display: none;
  }
  
  .sun-icon, .moon-icon {
    margin-left: 4px;
  }
  
  /* For small screens, only show the icon */
  @media (max-width: 600px) {
    .theme-status {
      padding: 10px;
    }
    
    .theme-status .dark-label,
    .theme-status .light-label {
      display: none;
    }
    
    .sun-icon, .moon-icon {
      margin-left: 0;
    }
  }
</style>